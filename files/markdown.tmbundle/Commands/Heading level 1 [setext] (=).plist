<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>beforeRunningCommand</key>
	<string>nop</string>
	<key>captureFormatString</key>
	<string>$3</string>
	<key>capturePattern</key>
	<string>^([^:]*):([^:]*):(.*)$</string>
	<key>command</key>
	<string>#!/usr/bin/env ruby18 -wKU

require 'jcode'
require ENV['TM_SUPPORT_PATH'] + '/lib/textmate'

begin
  # Split document into lines. Get current line number minus one for
  # previous, minus another for ruby being 0 based.
  lines = STDIN.readlines
  line  = ENV['TM_LINE_NUMBER'].to_i - 2

  # If line does not start with word character we insert literal tab
  if lines[line] !~ /^\w/
    TextMate.exit_insert_snippet("=\t")
  end

  # Get length of previous line, using jlength for unicode
  length = lines[line].rstrip.jlength

  # Print same number of =
  length.times { print "=" }
rescue
  TextMate.exit_show_tool_tip("Use this command on the line following a string to turn it into setext-style heading.")
end</string>
	<key>fileCaptureRegister</key>
	<string>1</string>
	<key>input</key>
	<string>document</string>
	<key>inputFormat</key>
	<string>text</string>
	<key>lineCaptureRegister</key>
	<string>2</string>
	<key>name</key>
	<string>Level 1 [setext]</string>
	<key>outputCaret</key>
	<string>afterOutput</string>
	<key>outputFormat</key>
	<string>text</string>
	<key>outputLocation</key>
	<string>atCaret</string>
	<key>scope</key>
	<string>text.html.markdown &amp; L:dyn.caret.begin.line</string>
	<key>tabTrigger</key>
	<string>=</string>
	<key>uuid</key>
	<string>F3A754C3-CE6B-11D9-9C17-000A95C0F626</string>
	<key>version</key>
	<integer>2</integer>
</dict>
</plist>
